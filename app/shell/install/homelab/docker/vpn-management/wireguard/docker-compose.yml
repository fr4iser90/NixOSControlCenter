services:

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file: wireguard.env
    volumes:
      - ./config:/config
      - ./lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    dns:
      - 1.1.1.1
    sysctls:
       - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      proxy:
        ipv4_address: 172.40.0.9
    labels:
      traefik.enable: "false" 

  wireguard-ui:
    image: ngoduykhanh/wireguard-ui:latest
    container_name: wireguard-ui
    depends_on:
      - wireguard
    cap_add:
      - NET_ADMIN
    network_mode: service:wireguard
    env_file: wireguard.env
    logging:
      driver: json-file
      options:
        max-size: 50m
    volumes:
      - ./db:/app/db
      - ./config:/etc/wireguard
    labels:
      # Basis-Konfiguration
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      
      # Router Konfiguration
      - "traefik.http.routers.wireguard-ui.entrypoints=websecure"
      - "traefik.http.routers.wireguard-ui.rule=Host(`wireguard-ui.${DOMAIN}`)"
      - "traefik.http.routers.wireguard-ui.tls=true"
      - "traefik.http.routers.wireguard-ui.tls.certresolver=http_resolver"
      
      # Service Konfiguration
      - "traefik.http.services.wireguard-ui.loadbalancer.server.port=5000"
      
      # Maximale Sicherheit mit allen Middlewares
      - "traefik.http.routers.wireguard-ui.middlewares=default@file,traefikAuth@file,admin-whitelist@file" #,rate-limit@docker"
      
      # Sticky Sessions
      - "traefik.http.services.wireguard-ui.loadbalancer.sticky.cookie.httpOnly=true"
      - "traefik.http.services.wireguard-ui.loadbalancer.sticky.cookie.secure=true"


networks:
  proxy:
    external: true
